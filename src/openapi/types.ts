/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/ranking": {
    /** Get ranking */
    get: operations["getRanking"];
  };
  "/problems": {
    /** Get problems */
    get: operations["getProblems"];
  };
  "/problems/{name}": {
    /** Get problem info */
    get: operations["getProblemInfo"];
  };
  "/langs": {
    /** Get language list */
    get: operations["getLangList"];
  };
  "/categories": {
    /** Get problem categories */
    get: operations["getProblemCategories"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UserStatistics: {
      name: string;
      /** Format: int32 */
      count: number;
    };
    RankingResponse: {
      statistics: components["schemas"]["UserStatistics"][];
      /** Format: int32 */
      count: number;
    };
    Problem: {
      name: string;
      title: string;
    };
    ProblemListResponse: {
      problems: components["schemas"]["Problem"][];
    };
    ProblemInfoResponse: {
      title: string;
      source_url: string;
      /** Format: float */
      time_limit: number;
      version: string;
      testcases_version: string;
      overall_version: string;
    };
    Lang: {
      id: string;
      name: string;
      version: string;
    };
    LangListResponse: {
      langs: components["schemas"]["Lang"][];
    };
    ProblemCategory: {
      title: string;
      problems: string[];
    };
    ProblemCategoriesResponse: {
      categories: components["schemas"]["ProblemCategory"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /** Get ranking */
  getRanking: {
    parameters: {
      query?: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RankingResponse"];
        };
      };
    };
  };
  /** Get problems */
  getProblems: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ProblemListResponse"];
        };
      };
    };
  };
  /** Get problem info */
  getProblemInfo: {
    parameters: {
      path: {
        name: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ProblemInfoResponse"];
        };
      };
    };
  };
  /** Get language list */
  getLangList: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["LangListResponse"];
        };
      };
    };
  };
  /** Get problem categories */
  getProblemCategories: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ProblemCategoriesResponse"];
        };
      };
    };
  };
}
